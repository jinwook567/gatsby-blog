{"version":3,"file":"component---src-pages-index-tsx-9acb2cb30f8f08c89016.js","mappings":"sPAOA,OALsBA,EAAAA,EAAAA,IAAK,CACzBC,IAAK,gBACLC,QAAS,Q,SC8DJ,SAASC,IACd,OAAOC,EAAAA,EAAAA,IAACC,EAAAA,EAAG,KACb,CAEA,MA5BA,WACE,MAAMC,GAAOC,EAAAA,EAAAA,gBAlCI,cAmCXC,EAAYF,EAAKG,kBAAkBC,MAEnCC,EADQ,CAAC,CAAEC,KAAM,CAAEC,KAAM,SAAS,eAAKP,EAAKQ,aAAaC,QACtCC,KAAIC,IAAA,IAAC,KAAEL,GAAM,SAAKA,EAAKC,IAAI,KAE7CK,EAAUC,IAAeC,EAAAA,EAAAA,IAAeC,GAK/C,OACEjB,EAAAA,EAAAA,IAACkB,EAAAA,EAAM,MACLlB,EAAAA,EAAAA,IAACmB,EAAAA,EAAY,CACXZ,WAAYA,EACZO,SAAUA,EACVM,SATkBC,IACtBN,EAAYM,EAAY,EASpBjB,UAAWA,EACXkB,cAAc,IAItB,C","sources":["webpack://gatsby-blog/./src/atoms.ts","webpack://gatsby-blog/./src/pages/index.tsx"],"sourcesContent":["import { atom } from 'recoil';\n\nconst categoryState = atom({\n  key: 'categoryState',\n  default: 'ALL',\n});\n\nexport default categoryState;\n","import React from 'react';\nimport { graphql, useStaticQuery } from 'gatsby';\nimport { useRecoilState } from 'recoil';\nimport { DirectoryNode, IndexQuery } from '../../types';\nimport CategoryList from '../components/category-list';\nimport Layout from '../components/layout';\nimport Seo from '../components/seo';\nimport categoryState from '../atoms';\n\nconst indexQuery = graphql`\n  query {\n    allDirectory(\n      filter: {\n        sourceInstanceName: { eq: \"content\" }\n        relativeDirectory: { eq: \"\" }\n      }\n    ) {\n      edges {\n        node {\n          name\n        }\n      }\n    }\n\n    allMarkdownRemark(sort: { frontmatter: { date: DESC } }) {\n      nodes {\n        fields {\n          slug\n        }\n        excerpt(pruneLength: 250, truncate: true)\n        frontmatter {\n          date\n          description\n          title\n        }\n        html\n        id\n      }\n    }\n  }\n`;\n\nfunction IndexPage() {\n  const data = useStaticQuery<IndexQuery>(indexQuery);\n  const postNodes = data.allMarkdownRemark.nodes;\n  const edges = [{ node: { name: 'ALL' } }, ...data.allDirectory.edges];\n  const categories = edges.map(({ node }) => node.name);\n\n  const [tabValue, setTabValue] = useRecoilState(categoryState);\n  const handleTabValue = (newTabValue: DirectoryNode['name']) => {\n    setTabValue(newTabValue);\n  };\n\n  return (\n    <Layout>\n      <CategoryList\n        categories={categories}\n        tabValue={tabValue}\n        onChange={handleTabValue}\n        postNodes={postNodes}\n        showAllPosts={false}\n      />\n    </Layout>\n  );\n}\n\nexport function Head() {\n  return <Seo />;\n}\n\nexport default IndexPage;\n"],"names":["atom","key","default","Head","___EmotionJSX","Seo","data","useStaticQuery","postNodes","allMarkdownRemark","nodes","categories","node","name","allDirectory","edges","map","_ref","tabValue","setTabValue","useRecoilState","categoryState","Layout","CategoryList","onChange","newTabValue","showAllPosts"],"sourceRoot":""}