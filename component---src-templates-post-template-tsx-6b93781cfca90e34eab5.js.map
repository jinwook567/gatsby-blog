{"version":3,"file":"component---src-templates-post-template-tsx-6b93781cfca90e34eab5.js","mappings":"mHAEIA,EAAyB,EAAQ,MAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBF,EAAuB,EAAQ,OAChDG,EAAc,EAAQ,MACtBC,GAAW,EAAIF,EAAeG,UAAuB,EAAIF,EAAYG,KAAK,OAAQ,CACpFC,EAAG,iEACD,QACJN,EAAQ,EAAUG,C,2BCVdJ,EAAyB,EAAQ,MAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBF,EAAuB,EAAQ,OAChDG,EAAc,EAAQ,MACtBC,GAAW,EAAIF,EAAeG,UAAuB,EAAIF,EAAYG,KAAK,OAAQ,CACpFC,EAAG,+DACD,QACJN,EAAQ,EAAUG,C,uBCVlB,MAAMI,GAAgBC,E,QAAAA,IAAK,CACzBC,IAAK,gBACLL,QAAS,QAGX,K,iLCFgD,0EAqChD,MA7BA,SAAuB,GAA4B,IAA5B,SAAEM,EAAQ,KAAEC,GAAa,EAC9C,OACEC,EAAAA,EAAAA,IAACC,EAAAA,GAAI,CAACC,WAAS,EAACC,eAAe,iBAC5B,CAACL,EAAUC,GAAMK,KAAI,CAACC,EAAMC,KAC3BN,EAAAA,EAAAA,IAACC,EAAAA,GAAI,CAACM,MAAI,EAACV,IAAKQ,EAAOA,EAAKG,GAAKF,GAC9BD,IACCL,EAAAA,EAAAA,IAACS,EAAAA,KAAI,CACHC,GAAIL,EAAKM,OAAOC,KAChBC,IAAG,IAQHb,EAAAA,EAAAA,IAACC,EAAAA,GAAI,CAACC,WAAS,EAACY,UAAW,EAAGC,WAAW,UAC5B,IAAVT,IAAeN,EAAAA,EAAAA,IAACgB,EAAAA,EAAQ,OACzBhB,EAAAA,EAAAA,IAACiB,EAAAA,EAAU,CAACC,QAAQ,MAAMb,EAAKc,YAAYC,OAChC,IAAVd,IAAeN,EAAAA,EAAAA,IAACqB,EAAAA,EAAQ,WAQzC,E,oBC9BqC,OAAAC,KAAAA,SAAAC,OAAAA,uCAwD9B,SAASC,EAAK,GAAwB,IAAxB,YAAEC,GAAoB,EACzC,MAAM,KAAEpB,GAASoB,EACjB,OACEzB,EAAAA,EAAAA,IAAC0B,EAAAA,EAAG,CACFN,MAAOf,EAAKc,YAAYC,MACxBO,YAAatB,EAAKc,YAAYQ,aAGpC,CAEA,MAxDA,SAAsB,GAAwB,IAAxB,YAAEF,GAAoB,EAC1C,MAAM,aAAEG,EAAY,kBAAEC,EAAiB,KAAExB,GAASoB,EAC5CK,EAAezB,EAAKM,OAAOC,KAAKmB,MAAM,KAAK,GAC3CC,GAAWC,EAAAA,EAAAA,IAAetC,EAAAA,GAEhC,OACEK,EAAAA,EAAAA,IAACkC,EAAAA,EAAM,MACLlC,EAAAA,EAAAA,IAACS,EAAAA,KAAI,CACHC,GAAE,aAAeoB,EACjBjB,IAAG,IAMHb,EAAAA,EAAAA,IAACiB,EAAAA,EAAU,CAACC,QAAQ,SAASY,KAG/B9B,EAAAA,EAAAA,IAACiB,EAAAA,EAAU,CACTC,QAAQ,KACRiB,WAAY,IACZC,GAAI,CAAEC,aAAc,EAAGC,UAAW,IAEjCjC,EAAKc,YAAYC,QAGpBpB,EAAAA,EAAAA,IAAAA,UAAAA,CACEuC,UAAU,gBAEVC,wBAAyB,CAAEC,OAAQpC,EAAKqC,SAG1C1C,EAAAA,EAAAA,IAACC,EAAAA,GAAI,CAACmC,GAAI,CAAEE,UAAW,KACrBtC,EAAAA,EAAAA,IAAC2C,EAAa,CACZ7C,SACe,QAAbkC,EACIJ,EAAa9B,SACb+B,EAAkB/B,SAExBC,KAAmB,QAAbiC,EAAqBJ,EAAa7B,KAAO8B,EAAkB9B,QAK3E,C","sources":["webpack://gatsby-blog/./node_modules/@mui/icons-material/East.js","webpack://gatsby-blog/./node_modules/@mui/icons-material/West.js","webpack://gatsby-blog/./src/atoms.ts","webpack://gatsby-blog/./src/components/post-navigator.tsx","webpack://gatsby-blog/./src/templates/post-template.tsx"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"m15 5-1.41 1.41L18.17 11H2v2h16.17l-4.59 4.59L15 19l7-7-7-7z\"\n}), 'East');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"m9 19 1.41-1.41L5.83 13H22v-2H5.83l4.59-4.59L9 5l-7 7 7 7z\"\n}), 'West');\nexports.default = _default;","import { atom } from 'recoil';\n\nconst categoryState = atom({\n  key: 'categoryState',\n  default: 'ALL',\n});\n\nexport default categoryState;\n","import React from 'react';\nimport { Grid, Typography } from '@mui/material';\nimport { Link } from 'gatsby';\nimport { css } from '@emotion/react';\nimport WestIcon from '@mui/icons-material/West';\nimport EastIcon from '@mui/icons-material/East';\nimport { MarkdownNode } from '../../types';\n\ntype Props = {\n  previous: MarkdownNode | null;\n  next: MarkdownNode | null;\n};\n\nfunction PostNavigator({ previous, next }: Props) {\n  return (\n    <Grid container justifyContent=\"space-between\">\n      {[previous, next].map((node, index) => (\n        <Grid item key={node ? node.id : index}>\n          {node && (\n            <Link\n              to={node.fields.slug}\n              css={css`\n                &:hover {\n                  & > div {\n                    text-decoration: underline;\n                  }\n                }\n              `}\n            >\n              <Grid container columnGap={1} alignItems=\"center\">\n                {index === 0 && <WestIcon />}\n                <Typography variant=\"h5\">{node.frontmatter.title}</Typography>\n                {index === 1 && <EastIcon />}\n              </Grid>\n            </Link>\n          )}\n        </Grid>\n      ))}\n    </Grid>\n  );\n}\n\nexport default PostNavigator;\n","import React from 'react';\nimport 'github-markdown-css/github-markdown-light.css';\nimport { useRecoilValue } from 'recoil';\nimport { Grid, Typography } from '@mui/material';\nimport { Link } from 'gatsby';\nimport { css } from '@emotion/react';\nimport { MarkdownNode, Navigator } from '../../types';\nimport Layout from '../components/layout';\nimport PostNavigator from '../components/post-navigator';\nimport Seo from '../components/seo';\nimport categoryState from '../atoms';\n\ntype Props = {\n  pageContext: {\n    allNavigator: Navigator;\n    categoryNavigator: Navigator;\n    node: MarkdownNode;\n  };\n};\n\nfunction PostTemplate({ pageContext }: Props) {\n  const { allNavigator, categoryNavigator, node } = pageContext;\n  const categoryName = node.fields.slug.split('/')[1];\n  const tabValue = useRecoilValue(categoryState);\n\n  return (\n    <Layout>\n      <Link\n        to={`/category/${categoryName}`}\n        css={css`\n          &:hover {\n            text-decoration: underline;\n          }\n        `}\n      >\n        <Typography variant=\"body1\">{categoryName}</Typography>\n      </Link>\n\n      <Typography\n        variant=\"h4\"\n        fontWeight={600}\n        sx={{ marginBottom: 2, marginTop: 2 }}\n      >\n        {node.frontmatter.title}\n      </Typography>\n\n      <section\n        className=\"markdown-body\"\n        // eslint-disable-next-line react/no-danger\n        dangerouslySetInnerHTML={{ __html: node.html }}\n      />\n\n      <Grid sx={{ marginTop: 5 }}>\n        <PostNavigator\n          previous={\n            tabValue === 'ALL'\n              ? allNavigator.previous\n              : categoryNavigator.previous\n          }\n          next={tabValue === 'ALL' ? allNavigator.next : categoryNavigator.next}\n        />\n      </Grid>\n    </Layout>\n  );\n}\n\nexport function Head({ pageContext }: Props) {\n  const { node } = pageContext;\n  return (\n    <Seo\n      title={node.frontmatter.title}\n      description={node.frontmatter.description}\n    />\n  );\n}\n\nexport default PostTemplate;\n"],"names":["_interopRequireDefault","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","categoryState","atom","key","previous","next","___EmotionJSX","Grid","container","justifyContent","map","node","index","item","id","Link","to","fields","slug","css","columnGap","alignItems","WestIcon","Typography","variant","frontmatter","title","EastIcon","name","styles","Head","pageContext","Seo","description","allNavigator","categoryNavigator","categoryName","split","tabValue","useRecoilValue","Layout","fontWeight","sx","marginBottom","marginTop","className","dangerouslySetInnerHTML","__html","html","PostNavigator"],"sourceRoot":""}